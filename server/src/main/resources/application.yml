spring:
  application:
    name: server
  datasource:
    url: jdbc:postgresql://localhost:5432/products
    username: postgres
    password: password
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://host.docker.internal:8080/realms/SpringBootKeycloak
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
          resource-id: springboot-keycloak-client

keycloak:
  admin-username: admin
  admin-password: admin
  realm-name: SpringBootKeycloak


logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

server:
  port: '8081'

management:
  zipkin:
    tracing:
      endpoint: http://host.docker.internal:9411/api/v2/spans
  tracing:
    sampling:
      probability: '1.0'
  endpoints:
    web:
      exposure:
        include: prometheus, health, info
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
